<p class="lead">The basics

Always use a language attribute on the html element. This is inherited by all other elements, and so will set a default language for the text in the document head element.

Note that you should use the html element rather than the body element, since the body element doesn't cover the text inside the document's head element.

If you have any content on the page that is in a different language from that declared in the html element, use language attributes on elements surrounding that content. This allows you to style or process it differently.

In some parts of your code you may have a problem. If you have multilingual text in the title element, you cannot mark up parts of the text for different languages because the title attribute only allows characters – no markup. The same goes for multiple languages in attribute values. There is no good solution for this at the moment.
</p>

<p class="lead">The basics

Always use a language attribute on the html element. This is inherited by all other elements, and so will set a default language for the text in the document head element.

Note that you should use the html element rather than the body element, since the body element doesn't cover the text inside the document's head element.

If you have any content on the page that is in a different language from that declared in the html element, use language attributes on elements surrounding that content. This allows you to style or process it differently.

In some parts of your code you may have a problem. If you have multilingual text in the title element, you cannot mark up parts of the text for different languages because the title attribute only allows characters – no markup. The same goes for multiple languages in attribute values. There is no good solution for this at the moment.
</p>

<p class="lead">The basics

Always use a language attribute on the html element. This is inherited by all other elements, and so will set a default language for the text in the document head element.

Note that you should use the html element rather than the body element, since the body element doesn't cover the text inside the document's head element.

If you have any content on the page that is in a different language from that declared in the html element, use language attributes on elements surrounding that content. This allows you to style or process it differently.

In some parts of your code you may have a problem. If you have multilingual text in the title element, you cannot mark up parts of the text for different languages because the title attribute only allows characters – no markup. The same goes for multiple languages in attribute values. There is no good solution for this at the moment.
</p>

<p class="lead">The basics

Always use a language attribute on the html element. This is inherited by all other elements, and so will set a default language for the text in the document head element.

Note that you should use the html element rather than the body element, since the body element doesn't cover the text inside the document's head element.

If you have any content on the page that is in a different language from that declared in the html element, use language attributes on elements surrounding that content. This allows you to style or process it differently.

In some parts of your code you may have a problem. If you have multilingual text in the title element, you cannot mark up parts of the text for different languages because the title attribute only allows characters – no markup. The same goes for multiple languages in attribute values. There is no good solution for this at the moment.
</p>

<p class="lead">The basics

Always use a language attribute on the html element. This is inherited by all other elements, and so will set a default language for the text in the document head element.

Note that you should use the html element rather than the body element, since the body element doesn't cover the text inside the document's head element.

If you have any content on the page that is in a different language from that declared in the html element, use language attributes on elements surrounding that content. This allows you to style or process it differently.

In some parts of your code you may have a problem. If you have multilingual text in the title element, you cannot mark up parts of the text for different languages because the title attribute only allows characters – no markup. The same goes for multiple languages in attribute values. There is no good solution for this at the moment.
</p>

<p class="lead">The basics

Always use a language attribute on the html element. This is inherited by all other elements, and so will set a default language for the text in the document head element.

Note that you should use the html element rather than the body element, since the body element doesn't cover the text inside the document's head element.

If you have any content on the page that is in a different language from that declared in the html element, use language attributes on elements surrounding that content. This allows you to style or process it differently.

In some parts of your code you may have a problem. If you have multilingual text in the title element, you cannot mark up parts of the text for different languages because the title attribute only allows characters – no markup. The same goes for multiple languages in attribute values. There is no good solution for this at the moment.
</p>

<p class="lead">The basics

Always use a language attribute on the html element. This is inherited by all other elements, and so will set a default language for the text in the document head element.

Note that you should use the html element rather than the body element, since the body element doesn't cover the text inside the document's head element.

If you have any content on the page that is in a different language from that declared in the html element, use language attributes on elements surrounding that content. This allows you to style or process it differently.

In some parts of your code you may have a problem. If you have multilingual text in the title element, you cannot mark up parts of the text for different languages because the title attribute only allows characters – no markup. The same goes for multiple languages in attribute values. There is no good solution for this at the moment.
</p>

<p class="lead">The basics

Always use a language attribute on the html element. This is inherited by all other elements, and so will set a default language for the text in the document head element.

Note that you should use the html element rather than the body element, since the body element doesn't cover the text inside the document's head element.

If you have any content on the page that is in a different language from that declared in the html element, use language attributes on elements surrounding that content. This allows you to style or process it differently.

In some parts of your code you may have a problem. If you have multilingual text in the title element, you cannot mark up parts of the text for different languages because the title attribute only allows characters – no markup. The same goes for multiple languages in attribute values. There is no good solution for this at the moment.
</p>

<p class="lead">The basics

Always use a language attribute on the html element. This is inherited by all other elements, and so will set a default language for the text in the document head element.

Note that you should use the html element rather than the body element, since the body element doesn't cover the text inside the document's head element.

If you have any content on the page that is in a different language from that declared in the html element, use language attributes on elements surrounding that content. This allows you to style or process it differently.

In some parts of your code you may have a problem. If you have multilingual text in the title element, you cannot mark up parts of the text for different languages because the title attribute only allows characters – no markup. The same goes for multiple languages in attribute values. There is no good solution for this at the moment.
</p>

<p class="lead">The basics

Always use a language attribute on the html element. This is inherited by all other elements, and so will set a default language for the text in the document head element.

Note that you should use the html element rather than the body element, since the body element doesn't cover the text inside the document's head element.

If you have any content on the page that is in a different language from that declared in the html element, use language attributes on elements surrounding that content. This allows you to style or process it differently.

In some parts of your code you may have a problem. If you have multilingual text in the title element, you cannot mark up parts of the text for different languages because the title attribute only allows characters – no markup. The same goes for multiple languages in attribute values. There is no good solution for this at the moment.
</p>

<div class="row">
  <div class="col-xs-6 col-md-3">
    <a href="#" class="thumbnail">
      <img src="..." alt="...">
    </a>
  </div>
  ...
</div>

<section id="first"><p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p></section>
<section id="second"><p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p></section>
    
<section id="third"><p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p></section>